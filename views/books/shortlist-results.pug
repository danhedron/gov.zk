//- vim:ft=jade
extends ../skeleton
block title
  title Shortlist Results
block breadcrumb
  li
    a(href='/book-club') Book club
  li
    a(href='/book-club/short-list') Short list
block content
  - electorCount = Object.keys(electorate).length
  - max = books.length * electorCount
  - unanimousBooks = 0
  .grid-row
    .column-full
      h1.heading-xlarge Short list results
  .grid-row
    .column-two-thirds
      table
        thead
          tr
            th(colspan="4") Flags
            th Candidate
            th.numeric Approvals
            //-
              th.numeric
                abbr(title="Satisifaction Approval Voting") SAV
        if results.length == 0
          tr
            td(colspan="7",style="text-align:center") Awaiting first ballotâ€¦
        for result in results
          tr
            td
              if result.longlistedBy === req.user
                abbr.green(title="You nominated this")  &#9998;
            td
              if result.readingList
                abbr.green(title="This book is on the reading list") âœ“
            td
              if result.difficult
                abbr.red(title="Marked difficult") &#9936;
            td
              if result.alreadyRead && result.alreadyRead.length > 0
                abbr.read(title="Someone has already read this") ðŸ“– 
            td
              strong
                a(href='/book-club/book/' + result.isbn) #{result.title}
              br
              span  #{result.author}
            if result.approve.length === electorCount
              - unanimousBooks++
              td.numeric(title="Unanimous approval by entire electorate").unanimous #{result.approve.length}
            else
                if result.approve.length > 0 && result.disapprove.length === 0
                  td.numeric(title="No dissents").almost-unanimous #{result.approve.length}
                else
                  td.numeric(title=result.approve.join(', ')) #{result.approve.length}
            //-
              td.numeric
                - x = 0
                for approver in result.approve
                  - x += 1/electorate[approver]
                if x == 0
                  span â€”
                else
                  span #{Math.round(x*1000)}


    .column-one-third
      table
        thead
          tr
            th Elector
            th.numeric Votes
        - sum = 0
        for elector in Object.keys(electorate)
          tr
            td #{elector}
            - sum += electorate[elector]
            if electorate[elector] == 0
              td.numeric Nil
            else
              if electorate[elector] == books.length
                td.numeric Complete
              else if electorate[elector] > books.length
                td.numeric.red #{electorate[elector]} of #{books.length}
              else
                td.numeric #{electorate[elector]} of #{books.length}

      p
        .data
          span.data-item.bold-xlarge #{unanimousBooks}
          span.data-item.bold-xsmall unanimous books
      p
      p.
        The shortlist is created using the <a href="//en.wikipedia.org/wiki/Approval_voting">Approval Voting</a>
        electoral system.

        It is a simple way to vote on a large number of candidates without having to rank them
        individually.

        The winner is the candidate with the most number of approvals (yes votes).
      //-
        p.
          For comparison, the results of <a href="//en.wikipedia.org/wiki/Satisfaction_approval_voting">satisfaction approval voting</a>
          are also provided.

          This is similar to approval voting, except that each elector has one vote shared between all
          their approvals, so each approval from a voter that votes five times is worth one fifth; and
          a voter who votes ten times has their approval worth one tenth. This attempts to ensure that
          each voter is satisfied with at least one winning candidate.
      if sum !== max
        if state == 'LONGLIST'
          p Voting is not yet open.
        else
          if state == 'SHORTLIST'
            p.
              Votes shown are provisional, as not everybody who has submitted a book to the longlist, or
              begun voting on the shortlist, has completed their ballots.
          else
            p Polls are closed.
      else
        p.
          Everybody that has submitted a book to the longlist, or begun voting on the shortlist, has
          completed their ballots.
        if state !== 'SHORTLIST'
          p Voting is now closed.
        else
          p Results are provisional, awaiting close of poll.
  .grid-row
     .column-full
       p #{sum} of #{max} votes returned.
